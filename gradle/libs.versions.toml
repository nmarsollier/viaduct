[versions]
# Project
project = "INCLUDED"

# Libraries
assertj = "3.24.2"
antlr-st4 = "4.2"
bytebuddy = "1.14.12"
caffeine = "2.9.1"
classgraph = "4.8.108"
clikt = "3.5.4"
graphql-java = "24.1"
graphql-java-extension = "22.0"
guava = "21.0"
checker = "3.12.0"
guice = "6.0.0"
jackson = "2.9.10"
javassist = "3.24.1-GA"
javax-inject = "1"
jmh = "1.25"
junit5 = "5.9.1"
konsist = "0.15.1"
kotest = "5.8.1"
kotlin = "1.9.24"
kotlinx = "1.5.2"
kotlinx-debug = "1.8.0"
kotlinx-metadata = "0.9.0"
mockk-jvm = "1.13.3"
reflections = "0.10.2"
slf4j = "2.0.7"
jspecify = "1.0.0"
strikt = "0.34.1"
micrometer = "1.10.8"

# Plugins
ktlintPluginVersion = "13.1.0"
ktlintVersion = "1.2.1"
detekt = "1.23.6"
dependency-analysis = "1.33.0"
jacoco = "0.8.12"
dokka = "2.0.0"
gradle-maven-publish = "0.34.0"
develocity = "3.19.2"
foojay-resolver-convention = "1.0.0"
spotbugs = "6.0.26"
idea-gradle-plugin = "1.3"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktlintPlugin = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintPluginVersion" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
jacoco = { id = "jacoco", version.ref = "jacoco" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
gradle-maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "gradle-maven-publish" }
develocity = { id = "com.gradle.develocity", version.ref = "develocity" }
foojay-resolver-convention = { id = "org.gradle.toolchains.foojay-resolver-convention", version.ref = "foojay-resolver-convention" }
spotbugs = { id = "com.github.spotbugs", version.ref = "spotbugs" }

[libraries]
# Project
viaduct-engine-api = { module = "com.airbnb.viaduct:engine-api", version.ref = "project" }
viaduct-engine-runtime = { module = "com.airbnb.viaduct:engine-runtime", version.ref = "project" }
viaduct-engine-wiring = { module = "com.airbnb.viaduct:engine-wiring", version.ref = "project" }
viaduct-tenant-api = { module = "com.airbnb.viaduct:tenant-api", version.ref = "project" }
viaduct-tenant-runtime = { module = "com.airbnb.viaduct:tenant-runtime", version.ref = "project" }
viaduct-tenant-codegen = { module = "com.airbnb.viaduct:tenant-codegen", version.ref = "project" }
viaduct-tenant-wiring = { module = "com.airbnb.viaduct:tenant-wiring", version.ref = "project" }

viaduct-service-api = { module = "com.airbnb.viaduct:service-api", version.ref = "project" }
viaduct-service-runtime = { module = "com.airbnb.viaduct:service-runtime", version.ref = "project" }
viaduct-service-wiring = { module = "com.airbnb.viaduct:service-wiring", version.ref = "project" }

viaduct-shared-arbitrary = { module = "com.airbnb.viaduct:shared-arbitrary", version.ref = "project" }
viaduct-shared-codegen = { module = "com.airbnb.viaduct:shared-codegen", version.ref = "project" }
viaduct-shared-dataloader = { module = "com.airbnb.viaduct:shared-dataloader", version.ref = "project" }
viaduct-shared-deferred = { module = "com.airbnb.viaduct:shared-deferred", version.ref = "project" }
viaduct-shared-graphql = { module = "com.airbnb.viaduct:shared-graphql", version.ref = "project" }
viaduct-shared-invariants = { module = "com.airbnb.viaduct:shared-invariants", version.ref = "project" }
viaduct-shared-logging = { module = "com.airbnb.viaduct:shared-logging", version.ref = "project" }
viaduct-shared-utils = { module = "com.airbnb.viaduct:shared-utils", version.ref = "project" }
viaduct-shared-viaductschema = { module = "com.airbnb.viaduct:shared-viaductschema", version.ref = "project" }
viaduct-shared-mapping = { module = "com.airbnb.viaduct:shared-mapping", version.ref = "project" }

viaduct-snipped-errors = { module = "com.airbnb.viaduct:snipped-errors", version.ref = "project" }

# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinx" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-debug" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx" }
kotlinx-metadata-jvm = { module = "org.jetbrains.kotlinx:kotlinx-metadata-jvm", version.ref = "kotlinx-metadata" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# Other libraries
antlr-st4 = { module = "org.antlr:ST4", version.ref = "antlr-st4" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
clikt-jvm = { module = "com.github.ajalt.clikt:clikt-jvm", version.ref = "clikt" }
graphql-java = { module = "com.graphql-java:graphql-java", version.ref = "graphql-java" }
graphql-java-extension = { module = "com.graphql-java:graphql-java-extended-scalars", version.ref = "graphql-java-extension" }
guice = { module = "com.google.inject:guice", version.ref = "guice" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-module = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
net-bytebuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "bytebuddy" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
jspecify = { module = "org.jspecify:jspecify", version.ref = "jspecify" }
micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
idea-gradle-plugin = { module = "org.jetbrains.gradle.plugin.idea-ext:org.jetbrains.gradle.plugin.idea-ext.gradle.plugin", version.ref = "idea-gradle-plugin" }

# Testing
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
guava-testlib = { module = "com.google.guava:guava-testlib", version.ref = "guava" }
io-mockk-dsl = { module = "io.mockk:mockk-dsl", version.ref = "mockk-jvm" }
io-mockk-jvm = { module = "io.mockk:mockk-jvm", version.ref = "mockk-jvm" }
jmh-annotation-processor = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
junit = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }
junit-launcher = { module = "org.junit.platform:junit-platform-launcher" }                               # version intentionally not specified
kotest-assertions-shared = { module = "io.kotest:kotest-assertions-shared", version.ref = "kotest" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-common-jvm = { module = "io.kotest:kotest-common-jvm", version.ref = "kotest" }
kotest-property-jvm = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
strikt-core = { module = "io.strikt:strikt-core", version.ref = "strikt" }
strikt-jvm = { module = "io.strikt:strikt-jvm", version.ref = "strikt" }
checker-qual = { module = "org.checkerframework:checker-qual", version.ref = "checker" }

# Linting
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
